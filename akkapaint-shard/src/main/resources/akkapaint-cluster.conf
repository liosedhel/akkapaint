akka {

  persistence {
    journal {
      plugin = "cassandra-journal"
    }
    snapshot-store {
      plugin = "cassandra-snapshot-store"
    }
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
    netty.tcp{
      maximum-frame-size = 640000b
    }

  }

  cluster {
    seed-nodes = ["akka.tcp://AkkaPaintSystem@127.0.0.1:2551"]
    auto-down-unreachable-after = 5s
  }

  actor {

    provider = "akka.cluster.ClusterActorRefProvider"

    serializers {
      java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }

    serialization-bindings {
      "org.akkapaint.proto.Messages.Pixel" = proto
      "org.akkapaint.proto.Messages.DrawEvent" = proto
      "org.akkapaint.proto.Messages.Draw" = proto
      "org.akkapaint.proto.Messages.Changes" = proto
      "org.akkapaint.proto.Messages.RegisterClient" = proto
      "org.akkapaint.proto.Messages.UnregisterClient" = proto
      "org.akkapaint.proto.Messages.DrawSnapshot" = proto
    }
  }
}

cassandra-journal {
  contact-points = ["127.0.0.1"]
  event-adapters = {
    draw_event = "org.akkapaint.shard.adapters.DrawEventAdapter"
  }

  event-adapter-bindings = {
    "org.akkapaint.proto.Messages.DrawEvent" = [draw_event]
  }
}

cassandra-snapshot-store {
  contact-points = ["127.0.0.1"]
}

akka.cluster.sharding {
  buffer-size = 2147483647 //during resharding process messages are buffered
  least-shard-allocation-strategy {
    # Threshold of how large the difference between most and least number of
    # allocated shards must be to begin the rebalancing.
    rebalance-threshold = 2

    # The number of ongoing rebalancing processes is limited to this number.
    max-simultaneous-rebalance = 3
  }

  remember-entities = off
  state-store-mode = ddata
}

